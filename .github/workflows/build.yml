name: Build and optionally trigger release
on:
  pull_request:
    # only PR from release can trigger a test release
    branches:
      - release*
  push:
    # only tagged release can trigger prod release and main branch
    tags:
      - v*
    branches-ignore:
      - '!main'
  workflow_dispatch:
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        id: set-up-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - run: |
          python -m pip install --upgrade pip
          pip install build twine

      - if: contains(github.ref, 'release')
        run: |
          NUMBER=$(cat _custom_build/VERSION_BUILD_SYTEM.txt | tr -d "[:space:]" )
          HASH=$(git rev-parse --short HEAD)
          echo -n "$NUMBER#$HASH" > _custom_build/VERSION_BUILD_SYTEM.txt
      - run: python -m build

      - run: |
          echo "# Twine check" >> $GITHUB_STEP_SUMMARY
          python -m twine check dist/* >> $GITHUB_STEP_SUMMARY

      - name: Upload package distributions
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/

  publish-to-test:
    needs: build
    if: contains(github.ref, 'release')
    uses: Mateusz-Grzelinski/actionlint-py/.github/workflows/release.yml@release-new-build-system
    permissions:
      id-token: write
      contents: write
    with:
      upload-mirror: "https://test.pypi.org/legacy/"
    secrets:
      pypi-token: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-to-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags') && endsWith(github.ref, 'main')
    uses: Mateusz-Grzelinski/actionlint-py/.github/workflows/release.yml@release-new-build-system
    permissions:
      id-token: write
      contents: write
    with:
      upload-mirror: "https://pypi.org/legacy/"
    secrets:
      pypi-token: ${{ secrets.PYPI_API_TOKEN }}
